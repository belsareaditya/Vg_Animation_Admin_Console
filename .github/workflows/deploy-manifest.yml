name: Deploy Kubernetes manifests

on:
  push:
    branches:
      - main    # change to your branch if needed
  workflow_dispatch: {}

permissions:
  contents: read

jobs:
  apply-manifests:
    runs-on: ubuntu-latest

    env:
      # define KUBE_CONFIG_PATH inside the job instead of top-level
      KUBE_CONFIG_PATH: /tmp/kubeconfig

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Restore kubeconfig (from base64 secret)
        run: |
          mkdir -p "$(dirname "$KUBE_CONFIG_PATH")"
          echo "${{ secrets.KUBECONFIG_DATA }}" | base64 --decode > "$KUBE_CONFIG_PATH"
          chmod 600 "$KUBE_CONFIG_PATH"
          export KUBECONFIG="$KUBE_CONFIG_PATH"
          echo "✅ Kubeconfig restored:"
          kubectl config view --minify || true

      - name: Apply all Kubernetes manifests in k8s/
        env:
          KUBECONFIG: ${{ env.KUBE_CONFIG_PATH }}
        run: |
          echo "Applying manifests..."
          kubectl apply -R -f k8s/
          echo "✅ Applied successfully."

          # Optional: Wait for vault-guard rollout
          if kubectl get deployment vault-guard >/dev/null 2>&1; then
            kubectl rollout status deployment/vault-guard --timeout=180s
          else
            echo "ℹ️ No deployment named vault-guard found. Skipping rollout wait."
          fi

      - name: Show Pods for debug
        if: always()
        env:
          KUBECONFIG: ${{ env.KUBE_CONFIG_PATH }}
        run: kubectl get pods -A -o wide || true
